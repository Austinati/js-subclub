{"version":3,"file":"index.umd.js","sources":["../src/client.ts"],"sourcesContent":["import type {\n  Post,\n  PostDeleteParams,\n  PostParams,\n  PostUpdateParams,\n} from './post';\n\nexport class Client {\n  private readonly apiUrl = 'https://api.sub.club/public';\n  private readonly apiKey: string;\n\n  constructor(apiKey: string) {\n    this.apiKey = apiKey;\n  }\n\n  // creates a new post on sub.club with the given parameters.\n  async createPost(params: PostParams): Promise<Post> {\n    const response = await fetch(`${this.apiUrl}/post`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.apiKey}`,\n      },\n      body: JSON.stringify(params),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to create post: ${response.statusText}`);\n    }\n\n    return response.json() as Promise<Post>;\n  }\n\n  // edits the given post with the supplied PostUpdateParams.\n  async editPost(params: PostUpdateParams): Promise<Post> {\n    const response = await fetch(`${this.apiUrl}/post/edit`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.apiKey}`,\n      },\n      body: JSON.stringify(params),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to edit post: ${response.statusText}`);\n    }\n\n    return response.json() as Promise<Post>;\n  }\n\n  // deletes a post with the given postID.\n  async deletePost(params: PostDeleteParams): Promise<void> {\n    const response = await fetch(`${this.apiUrl}/post/delete`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.apiKey}`,\n      },\n      body: JSON.stringify(params),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to delete post: ${response.statusText}`);\n    }\n\n    return;\n  }\n}\n\nexport default Client;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAOa,MAAM,CAAA;IAIjB,IAAA,WAAA,CAAY,MAAc,EAAA;YAHT,IAAM,CAAA,MAAA,GAAG,6BAA6B,CAAC;IAItD,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACtB;;IAGK,IAAA,UAAU,CAAC,MAAkB,EAAA;;gBACjC,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,IAAI,CAAC,MAAM,CAAA,KAAA,CAAO,EAAE;IAClD,gBAAA,MAAM,EAAE,MAAM;IACd,gBAAA,OAAO,EAAE;IACP,oBAAA,cAAc,EAAE,kBAAkB;IAClC,oBAAA,eAAe,EAAE,CAAA,OAAA,EAAU,IAAI,CAAC,MAAM,CAAE,CAAA;IACzC,iBAAA;IACD,gBAAA,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;IAC7B,aAAA,CAAC,CAAC;IAEH,YAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE;oBAChB,MAAM,IAAI,KAAK,CAAC,CAAA,uBAAA,EAA0B,QAAQ,CAAC,UAAU,CAAE,CAAA,CAAC,CAAC;iBAClE;IAED,YAAA,OAAO,QAAQ,CAAC,IAAI,EAAmB,CAAC;aACzC,CAAA,CAAA;IAAA,KAAA;;IAGK,IAAA,QAAQ,CAAC,MAAwB,EAAA;;gBACrC,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,IAAI,CAAC,MAAM,CAAA,UAAA,CAAY,EAAE;IACvD,gBAAA,MAAM,EAAE,KAAK;IACb,gBAAA,OAAO,EAAE;IACP,oBAAA,cAAc,EAAE,kBAAkB;IAClC,oBAAA,eAAe,EAAE,CAAA,OAAA,EAAU,IAAI,CAAC,MAAM,CAAE,CAAA;IACzC,iBAAA;IACD,gBAAA,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;IAC7B,aAAA,CAAC,CAAC;IAEH,YAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE;oBAChB,MAAM,IAAI,KAAK,CAAC,CAAA,qBAAA,EAAwB,QAAQ,CAAC,UAAU,CAAE,CAAA,CAAC,CAAC;iBAChE;IAED,YAAA,OAAO,QAAQ,CAAC,IAAI,EAAmB,CAAC;aACzC,CAAA,CAAA;IAAA,KAAA;;IAGK,IAAA,UAAU,CAAC,MAAwB,EAAA;;gBACvC,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,IAAI,CAAC,MAAM,CAAA,YAAA,CAAc,EAAE;IACzD,gBAAA,MAAM,EAAE,QAAQ;IAChB,gBAAA,OAAO,EAAE;IACP,oBAAA,cAAc,EAAE,kBAAkB;IAClC,oBAAA,eAAe,EAAE,CAAA,OAAA,EAAU,IAAI,CAAC,MAAM,CAAE,CAAA;IACzC,iBAAA;IACD,gBAAA,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;IAC7B,aAAA,CAAC,CAAC;IAEH,YAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE;oBAChB,MAAM,IAAI,KAAK,CAAC,CAAA,uBAAA,EAA0B,QAAQ,CAAC,UAAU,CAAE,CAAA,CAAC,CAAC;iBAClE;gBAED,OAAO;aACR,CAAA,CAAA;IAAA,KAAA;IACF;;;;;;;;"}